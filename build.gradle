buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	
	// Thymeleaf
	compile('org.thymeleaf:thymeleaf:3.0.5.RELEASE')
	compile('org.thymeleaf:thymeleaf-spring4:3.0.5.RELEASE')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE')
	compile('org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.0.RELEASE')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

springBoot {
	executable = true
}

task local {
	bootRun { systemProperty "spring.profiles.active", "homes" }
}

bootRun {
  if ( project.hasProperty('springDebug') ) {
	  args '--debug'
  }
}
  
bootRun.mustRunAfter local

processResources {
	filesMatching("**/*.properties") {		
		expand(project.properties)
	}
}